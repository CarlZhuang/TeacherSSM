<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- Spring的配置文件，这里主要配置和业务逻辑有关的 -->
	<!--=================== 数据源，事务控 制，xxx ================-->
	
	<!-- 将业务逻辑（Service）扫描纳入Spring的管理 -->
	<context:component-scan base-package="org.great.service">
			<!-- 除了控制器之外其他都需要 -->
	        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
    </context:component-scan>	
	
	<!--  ========================配置数据源=========================================== -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">  
		      <value>com.mysql.jdbc.Driver</value>  
		</property>  
		<property name="url">  
		      <value>jdbc:mysql://localhost:3306/osta</value>  
		</property>  
		<property name="username">  
		      <value>root</value>  
		</property>  
		<property name="password">  
		      <value>123456</value>  
		</property>  	
	</bean>

	<!-- ===========================配置Spring和Mybatis整合================================== -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis，mapper.xml文件的位置 -->
		<property name="mapperLocations" value="classpath:org/great/mapper/*.xml"/>
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
		<!-- 配置数据源，数据源就是ref=dataSource -->
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 扫描Mapper，将Mybatis接口的实现加入到spring ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有Mybatis dao接口的实现(mapper.java)，加入到ioc容器中 -->
		<property name="basePackage" value="org.great.mapper"/>
	</bean>
    
    <!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<!-- batch数据库更新删除修改返回行数会失效，返回固定值-2147482646， -->
		<constructor-arg name="executorType" value="SIMPLE"></constructor-arg>
	</bean>
	<!-- ===================================================================================== -->

</beans>